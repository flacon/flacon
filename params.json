{"name":"Flacon","tagline":"Audio File Encoder. Extracts audio tracks from an audio CD image to separate tracks.","body":"Flacon extracts individual tracks from one big audio file containing the entire album of music and saves them as separate audio files. To do this, it uses information from the appropriate CUE file. \r\nBesides, Flacon makes it possible to conveniently revise or specify tags both for all tracks at once or for each tag separately.\r\n\r\n===Interface languages===\r\n  * Czech\r\n  * English\r\n  * French\r\n  * Polish\r\n  * Russian\r\n  * Spanish (Mexico)\r\n  * Ukrainian\r\n\r\n==Screenshots==\r\n[http://wiki.flacon.googlecode.com/hg/imgs/flacon-1.png http://wiki.flacon.googlecode.com/hg/imgs/flacon-1-small.png]\r\n_Main window_\r\n\r\n[http://wiki.flacon.googlecode.com/hg/imgs/flacon-2.png http://wiki.flacon.googlecode.com/hg/imgs/flacon-2-small.png]\r\n_Conversion process_\r\n\r\n[http://wiki.flacon.googlecode.com/hg/imgs/flacon-3.png http://wiki.flacon.googlecode.com/hg/imgs/flacon-3-small.png]\r\n_Configure dialog_\r\n\r\n\r\n==Requires==\r\n  * python\r\n  * PyQt\r\n  * python-chardet\r\n  * shntool\r\n  * flac (optional, for decoding and encoding FLAC files)\r\n  * mac (optional, for decoding APE files)\r\n  * wavpack (optional, for decoding WV files)\r\n  * ttaenc (optional, for decoding TTA files)\r\n  * oggenc (optional, for encoding OGG files)\r\n  * lame (optional, for encoding MP3 files)\r\n  * faac (optional, for encoding AAC files)\r\n  * metaflac (optional, for FLAC replay gain)\r\n  * vorbisgain (optional, for OGG replay gain)\r\n  * mp3gain (optional, for MP3 replay gain)\r\n\r\n\r\n==Installation==\r\nWritten in Python, Flacon uses some external programs (see requires), which is why you’ve got to install these programs. \r\nTo test the program, just extract the archive and run the file flacon.py.\r\nTo install the program, execute: sudo make install.\r\n\r\n*Ubuntu* users can use [https://launchpad.net/~flacon/+archive/ppa repository at launchpad], just run the following commands:\r\n{{{\r\n  sudo add-apt-repository ppa:flacon\r\n  sudo apt-get update\r\n  sudo apt-get install flacon\r\n}}}\r\n\r\n*OpenSUSE* users can download RPM packages from http://packman.links2linux.org/package/flacon. _Thanks to [http://qt-apps.org/usermanager/search.php?username=LazyKent Kyrill Detinov]_.\r\n\r\n\r\n### Features\r\nSupported input formats: WAV, FLAC, APE, WavPack, True Audio (TTA).\r\n  * Supported out formats: FLAC, WAV, WavPack, AAC, OGG or MP3.\r\n  * Replay Gain analysis (album-gain and track-gain modes).\r\n  * Multi-threaded conversion process.\r\n  * Automatic character set detection for CUE files.\r\n\r\n\r\n\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and we’ll help you sort it out.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}
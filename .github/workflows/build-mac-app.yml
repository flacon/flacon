name: Build MacOs Bundle

on: [push]


jobs:
  build-arm64:
    uses: ./.github/workflows/build-mac-flacon.yml
    name: arm64
    with:
      arch: arm64

  build-x86_64:
    uses: ./.github/workflows/build-mac-flacon.yml
    name: x86_64
    with:
      arch: x86_64


  flacon-app:
    runs-on: macos-latest

    needs:
      - build-arm64
      - build-x86_64

    steps:
    - uses: actions/checkout@v3

    - name: Set env
      run: |
        echo "--------------------------------------------"
        export
        echo "--------------------------------------------"

        echo "RELEASE_DATE=$(date +%Y.%m.%d_%H.%M.%S)" >> ${GITHUB_ENV}
        grep "RELEASE_DATE" ${GITHUB_ENV}

        echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> ${GITHUB_ENV}
        grep "RELEASE_VERSION" ${GITHUB_ENV}

        [[ "${GITHUB_REF_TYPE}"  = "tag" ]] && echo ARTIFACT_NAME="Flacon-${GITHUB_REF_NAME:1}.app" >> ${GITHUB_ENV}
        [[ "${GITHUB_REF_TYPE}" != "tag" ]] && echo ARTIFACT_NAME="Flacon-$(date +%Y.%m.%d_%H.%M.%S).app" >> ${GITHUB_ENV}
        grep "ARTIFACT_NAME" ${GITHUB_ENV}

        [[ "${GITHUB_REF_TYPE}"  = "tag" ]] && echo TAR_NAME="Flacon-${GITHUB_REF_NAME:1}.tar" >> ${GITHUB_ENV}
        [[ "${GITHUB_REF_TYPE}" != "tag" ]] && echo TAR_NAME="Flacon-$(date +%Y.%m.%d_%H.%M.%S).tar" >> ${GITHUB_ENV}
        grep "TAR_NAME" ${GITHUB_ENV}

        echo "--------------------------------------------"
        cat ${GITHUB_ENV}
        echo "--------------------------------------------"

    - name: Download arm64
      uses: actions/download-artifact@v4
      with:
        name: Flacon-arm64


    - name: Extract arm64
      env:
        ARCH: arm64
      shell: bash
      run: |
        mkdir -p ${{ env.ARCH }}
        tar xvf Flacon-${{env.ARCH}}.tar -C ${{env.ARCH}}


    - name: Download x86_64
      uses: actions/download-artifact@v4
      with:
        name: Flacon-x86_64


    - name: Extract x86_64
      env:
        ARCH: x86_64
      shell: bash
      run: |
        mkdir -p ${{ env.ARCH }}
        tar xvf Flacon-${{env.ARCH}}.tar -C ${{env.ARCH}}


    - name: Install tools
      shell: bash
      run: |
        git clone https://github.com/flacon/flacon.third-party.git ${HOME}/flacon.third-party
        mkdir -p ${HOME}/bin/
        cp ${HOME}/flacon.third-party/bin/* ${HOME}/bin/


    - name: Create universal application
      shell: bash
      run: |
        lipo-app x86_64/Flacon.app arm64/Flacon.app Flacon.app


    - name: Check external programs
      run: |
        ${{github.workspace}}/scripts/check-extprograms.sh . Flacon.app/Contents/MacOS


    - name: Check libraries
      shell: bash
      working-directory: ${{github.workspace}}
      run: |
        ${HOME}/bin/macdeploy.py check-libs Flacon.app


    - name: Prepare artifacts
      working-directory: ${{ env.HOME }}
      run : |
        tar -C . -cf ${{env.TAR_NAME}} Flacon.app
        cp ${{github.workspace}}/.github/workflows/makedmg.sh .
        cp ${{github.workspace}}/.github/workflows/dmg_settings.json .


    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.ARTIFACT_NAME }}
        path: |
          ${{env.TAR_NAME}}
          makedmg.sh
          dmg_settings.json
